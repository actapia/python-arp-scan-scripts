import re, sys

from vendor import get_vendor_file

default_url = 'http://standards.ieee.org/develop/regauth/iab/iab.txt'
default_filename = 'ieee-iab.txt'
header_comments = """# ieee-iab.txt -- Ethernet vendor IAB file for arp-scan
#
# This file contains the Ethernet vendor IABs for arp-scan.  These are used
# to determine the vendor for a give Ethernet interface given the MAC address.
#
# Each line of this file contains an IAB-vendor mapping in the form:
#
# <IAB><TAB><Vendor>
#
# Where <IAB> is the first 36 bits of the MAC address in hex, and <Vendor>
# is the name of the vendor.
#
# Blank lines and lines beginning with "#" are ignored.
#
# This file was automatically generated by get-iab at {0}
# using data from {1}
#
# Do not edit this file.  If you want to add additional MAC-Vendor mappings,
# edit the file mac-vendor.txt instead.
#
"""

def read_iab(res,output_file,**kwargs):
    # Parse the content received from the URL, and write the IAB entries to the
    # output file.  Match lines that look like this:
    #  00-50-C2      (hex)           T.L.S. Corp.
    #  000000-000FFF (base 16)       T.L.S. Corp.
    # and write them to the output file looking like this:
    # 0050C2000	T.L.S. Corp.
    #
    # We take the first 24 bits (six hex digits) from the first line containing
    # "(hex)" and the next 12 bits (three hex digits) from the second line
    # containing "(base 16)". These are then concatenated together to form the
    # 36-bit IAB.
    first_line_re = re.compile(r"^\s*(\w{2})-(\w{2})-(\w{2})\s+\(hex\)\s+(.*?)\s*$")
    second_line_re = re.compile(r"^\s*(\w+)-\w+\s+\(base 16\)")
    lines = iter(res.text.splitlines())
    line_number = 0
    for line in lines:
        matches = first_line_re.match(line)
        if matches:
            oui = "".join(matches.groups()[:3])
            vendor = matches.group(4)
            line = next(lines)
            matches = second_line_re.match(line)
            if matches:
                iab_var = matches.group(1)[:3]
                output_file.write("{0}{1}\t{2}\n".format(oui,iab_var,vendor))
                line_number = line_number + 1
            else:
                print("ERROR: Unexpected input line in IEEE {0} data. Got: {1}".format(name,line))#file=sys.stderr))
                sys.exit(1)
    return line_number

if __name__ == "__main__":
    get_vendor_file("IAB",default_filename,default_url,header_comments,read_iab)
