import re, sys

from vendor import get_vendor_file

default_url = 'http://standards-oui.ieee.org/oui/oui.txt'
default_filename = 'ieee-oui.txt'
header_comments = """# ieee-oui.txt -- Ethernet vendor OUI file for arp-scan
#
# This file contains the Ethernet vendor OUIs for arp-scan.  These are used
# to determine the vendor for a give Ethernet interface given the MAC address.
#
# Each line of this file contains an OUI-vendor mapping in the form:
#
# <OUI><TAB><Vendor>
#
# Where <OUI> is the first three bytes of the MAC address in hex, and <Vendor>
# is the name of the vendor.
#
# Blank lines and lines beginning with "#" are ignored.
#
# This file was automatically generated by get-oui at $date_string
# using data from $url
#
# Do not edit this file.  If you want to add additional MAC-Vendor mappings,
# edit the file mac-vendor.txt instead.
#
"""

def read_oui(res,output_file,**kwargs):
    line_re = re.compile(r"^\s*(\w{2})-(\w{2})-(\w{2})\s+\(hex\)\s+(.*?)\s*$")
    line_number = 0
    # Parse the content received from the URL, and write the OUI entries to the
    # output file.  Match lines that look like this:
    # 00-00-00   (hex)                XEROX CORPORATION
    # and write them to the output file looking like this:
    # 000000	XEROX CORPORATION
    for line in res.text.splitlines():
        match = line_re.search(line)
        if match:
            groups = match.groups()
            output_file.write("{0}\t{1}\n".format("".join(groups[:3]),groups[3]))
            line_number = line_number + 1
    return line_number

if __name__ == "__main__":
    get_vendor_file("OUI",default_filename,default_url,header_comments,read_oui)
